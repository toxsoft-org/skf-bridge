TODO:
+1. продумать как указать файлы команд и битовых свойств
2. чистить metainfo при удалении объектов
+3. дописать документ "OPC UA configurer, under the hood"
+4. проверить создание одного класса и одного объекта и их вклад в весомость dlmcfg and devcfg
+5. проверить обновленеи одного класса и нескольких объектов 
+6. Max, конфигурация dev|dlmcfg, не интуитивное название и процесс создания, что такое NodeId ? и зачем его отображать
+7. использование имени при гененрации
+8. ввод пути к директории вывода через выбор диалога пути
+9. генерация узлов автоматически, а не руками
+10. автоподтягивание информации о OPC UA NodeI
+11. бегунок при автогенерации руками на обоих закладках
12. 
 
1 task:

 В генераторе devcfg нужно подставлять реальный IP взятый из описания соединения с OPC UA сервером.
Речь вот об этом:
  id = "opc2s5.bridge.collection.id",
            description = "opc 2 s5 pins UA apparat producer",
            host = "opc.tcp://192.168.12.61:4840",
            user = "",
            password = ""
            
            
2 task:

 Разгребаю авгиевы конюшню, первое что прошу тебя сделать по генератору конфигурации.
Вот эту заплатку сделать по нормальному, OpcToS5DataCfgConverter::createRriAttrs()
начиная с строки  366 // TODO заполним описание настройки для модуля вцелом
Это мой костыль для конфигурирования специального блока кода который следит за флагом "Нужен НСИ с сервера USkat".
Щас тупо вставлены нужные данные руками.

Сделать нужно следующее:
- задать device комплексного тега - девайс у нас один
- задать обычный тег на чтение "флаг НСИ" (это тег который сопоставлен с Gwid CtrlSystem[CtrlSystem]rtd(rtdStatusRRI))
- задать код сброса флага (получить из справочника Cmd_OPCUA, strid CtrlSystem.ResetRRI )  
- задать код установки флага (получить из справочника Cmd_OPCUA, strid CtrlSystem.SetRRI )  
- задать комплексны тег ( это комплексный тег для всех команд CtrlSystem[CtrlSystem] )
Пример как работать со справочником см. OpcUaUtils::readClass2CmdIdx()
И еще одно,
  пока писал письмо обнаружил что в отправленном тебе системном описании нет объектов класса CtrlSystem.
Я тупо забыл его сгенерить. Щас перегенерю и отправлю.